public class BinaryTree {
  private Node root;
  public BinaryTree(Node root) {
    setRoot(root);
  }

  public void setRoot(Node root) {
    this.root = root;
  }

  public Node getRoot() {
    return root;
  }

  public static void main(String[] args) {
    BinaryTree tree=new BinaryTree(10);
    tree.insert(11);
    tree.insert(9);
    tree.insert(9);
    tree.printer();
  }
}

class Node {
  private long value;
  private BinaryTree P;
  private BinaryTree R;
  private BinaryTree L;

  public BinaryTree(long value) {
    this.value = value;
    P=null;
    R=null;
    L=null;
  }

  public void setP(BinaryTree P) {
    this.P = P;
  }
 
  public long getValue() {
    return value;
  }

  public BinaryTree getR() {
    return R;
  }

  public BinaryTree getL() {
    return L;
  }
/*
  public void addR(long value) {
    if (getR() == null) {
      R = new BinaryTree(value);
      R.setP(this);
    } else {
      getR().add(value);
    }
  }

  public void addL(long value) {
    if (getL() == null) {
      L = new BinaryTree(value);
      L.setP(this);
    } else {
      getL().add(value);
    }
  }

  public void add(long value) {
    if (value >= getValue()) {
      addR(value);
    } else {
      addL(value);
    }
  }
*/

  public void printer() {
    System.out.println(""+value
        +": "+(getL() == null ? "nil" : getL().getValue())
        +" <-> "+(getR() == null ? "nil" : getR().getValue()));

    if (getR() != null) {
      getR().printer();
    }
    if (getL() != null) {
      getL().printer();
    }
  }


}
